version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: ai-startup-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-aistartup}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-aistartup}
      POSTGRES_DB: ${POSTGRES_DB:-aistartup}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - ai-startup-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-aistartup} -d ${POSTGRES_DB:-aistartup}"]
      interval: 10s
      timeout: 5s
      retries: 5

  mongodb:
    image: mongo:7
    container_name: ai-startup-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-aistartup}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-aistartup}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-aistartup}
    ports:
      - "${MONGO_PORT:-27017}:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - ai-startup-network
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local

networks:
  ai-startup-network:
    driver: bridge